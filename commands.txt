bash --version
echo $SHELL --> To see the main shell in my computer
history | less --> To see the content in an interactive way
history | wc --> To see the amount of lines, words and characterers in a file

Piping is usually used with the following tools:
    grep, awk, sed, cut

----
|
>
>>
1>
2>
1>>
2>>
<
<<

<< EndOfText
    "Commands"
EndOfText

----
Built-in functions

echo
printf
command echo
builtin echo
command -V echo
command -V df
The default is always the built-in programs
enable -n echo
enable -n
enable echo
help echo --> Help is only used with builtins
help --> To see the builtins that bash provides

----
~
{...}
${...}
$(...) --> Also `...`
$((...)) --> Also $[...]

----
echo ~
whoami
echo ~- --> The same output could be reached by echo $OLDPWD

----
echo /tmp/{one,two,three}/file.txt
echo c{a,o,u}t
echo /tmp/{1..3}/file.txt
echo {00..100}
echo {100.00}
echo {a..z}
echo {Z..A}
echo {1..30..3}
echo {a..z..2}
touch file_{01..12}{a..d}
rm file_*
echo {cat,dog,fox}
echo {cat,dog,fox}_{1..5}
head -n1 {dir1,dir2,dir3}/lorem.txt

----
a="Hello World World"
echo $a  --> This is different to "echo a"
echo ${a}
echo ${a:4}
echo ${a:1:12}
echo ${a/World/Everybody}
echo ${a//World/Everybody}
echo ${a//o/_}
echo $a:1:12  --> Everything right here is interpreted as a parameter not as a command

----
uname -r
echo "The kernel is $(uname -r)."
echo "The python version is $(python3 -V)"
echo "Result: $(python3 -c 'print("Hello from Python!")')"
echo "Result: $(python3 -c 'print("Hello from Python!")' | tr [a-z] [A-Z])"
echo "Result: `python3 -c 'print("Hello from Python!")'`"
Command substitution is often used with grep awk, and cut

----
